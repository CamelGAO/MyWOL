#!/usr/bin/env python3

import sys
import getopt
import re
import binascii
import socket

ip_address = "255.255.255.255"
port_number = 9
flag = 0
mac_address = ""
re_ip = r"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5]))\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5]))$"
re_mac = r"^([0-9a-fA-F]{2}\:){5}[0-9a-fA-F]{2}$"

def usage():
    print('''   Usage: Wake on lan
        -h: this information
        -a: address
        -m: mac
        -p: port''')

def isValidIp(_ip):
    if re.match(re_ip, _ip):
        return True
    return False

def isValidMac(_mac):
    if re.match(re_mac, _mac):
        return True
    return False

def isValidPort(_port):
    try:
        int(_port)
        return True
    except ValueError:
        return False

#print("name:", sys.argv[0])

for i in range(1, len(sys.argv)):
    print("argv", i, sys.argv[i])

try:
    opts, args = getopt.getopt(sys.argv[1:], "ha:m:p:")
#    print("opts")
#    for i in opts:
#        print(i[0], i[1])
#    print("args")
#    for value in args:
#        print(value)
except getopt.GetoptError:
    usage();
    sys.exit(1)

for opt, value in opts:
    if(opt == "-h"):
        usage();
    elif(opt == "-a"):
        if isValidIp(value):
            print("ip:", value)
            ip_address = value
        else:
            print("Invalid ip")
            flag -= 1
    elif(opt == "-m"):
        if isValidMac(value):
            print("mac:", value)
            mac_address = value
            flag += 1
        else:
            print("Invalid mac")
    elif(opt == "-p"):
        if isValidPort(value):
            print("port:", value)
            port_number = int(value)
        else:
            print("Invalid port")
            flag -= 1

if flag != 1:
    exit

mac_address = mac_address.replace(':', '')

s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM, 0)
s.setsockopt(socket.SOL_SOCKET,socket.SO_BROADCAST,1)

s.sendto(binascii.unhexlify("FF"*6+mac_address*16),(ip_address,port_number))

s.close()
